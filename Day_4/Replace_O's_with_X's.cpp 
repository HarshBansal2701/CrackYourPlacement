//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
    void dfs(vector<vector<char>>& mat,vector<vector<bool>>& vis, int row,int col){
        vis[row][col] = true;
        
        int r[4] = {-1,0,0,1};
        int c[4] = {0,1,-1,0};
        
        for(int i = 0 ; i<4 ; i++){
            int x = row + r[i];
            int y = col + c[i];
            
            if(x>=0 && y>=0 && x<mat.size() && y<mat[0].size() && !vis[x][y] && mat[x][y]=='O'){
                dfs(mat,vis,x,y);
            }
        }
    }
public:
    vector<vector<char>> fill(int n, int m, vector<vector<char>> mat)
    {
        // code here
 
        vector<vector<bool>> vis(n , vector<bool>(m,false));
        
        for (int i = 0; i < n; i++) {
            if (mat[i][0] == 'O' && !vis[i][0])
                dfs(mat, vis, i, 0);
            if (mat[i][m-1] == 'O' && !vis[i][m-1])
                dfs(mat, vis, i, m-1);
        }
        
        for (int j = 0; j < m; j++) {
            if (mat[0][j] == 'O' && !vis[0][j])
                dfs(mat, vis, 0, j);
            if (mat[n-1][j] == 'O' && !vis[n-1][j])
                dfs(mat, vis, n-1, j);
        }
        
        vector<vector<char>> fill(n, vector<char>(m, 'X'));
        
        for(int i = 0 ; i<n ; i++){
            for(int j = 0 ; j<m ; j++){
                if(vis[i][j]){
                    fill[i][j] = 'O';
                }
            }
        }
        
        return fill;
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n, m;
        cin>>n>>m;
        vector<vector<char>> mat(n, vector<char>(m, '.'));
        for(int i = 0;i < n;i++)
            for(int j=0; j<m; j++)
                cin>>mat[i][j];
        
        Solution ob;
        vector<vector<char>> ans = ob.fill(n, m, mat);
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < m;j++) {
                cout<<ans[i][j]<<" ";
            }
            cout<<"\n";
        }
    }
    return 0;
}
// } Driver Code Ends